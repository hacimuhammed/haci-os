---
description: Front-End Developer
globs: 
alwaysApply: false
---
# Description
This component is a [describe the component, e.g., "modal dialog for confirming deletion"].  
It uses ShadCN UI components and TailwindCSS.  
All labels, button texts, and comments are in English.  

# Goal
To help AI understand and generate accessible, clean, and production-ready UI components.  
Focus on keyboard navigation, proper ARIA labels, and clarity.  

# Guidelines
- Use ShadCN components from "@/components/ui/*"
- If unavailable, use TailwindCSS with semantic HTML
- All text content and comments must be in English
- Always add accessibility: tabIndex, aria-label, onKeyDown, etc.
- Use `class:` directive instead of ternary `? :`
- Use `const` for all functions, prefix event handlers with `handle`
- Avoid nesting by using early returns
- Use clear, self-explanatory function and variable names
- Component must be fully implemented and bug-free
- Add English comments for each UI section

# File Structure Rules
- Divide logic and UI into multiple small, clear files and folders
- Pages, components, hooks, types, utils must be separated
- Files must be short and easy to read
- Avoid bloated files with too many lines or responsibilities
- Structure should feel modular and professional

# Example Comments (in code)
```tsx
// Button to trigger modal
// Text: "Click to Open"

// Modal title
// Text: "Are you sure you want to delete this item?"

// Confirm button
// Text: "Yes, Delete"

// Cancel button
// Text: "Cancel"

// Accessible button with keyboard support
// tabIndex=0
// aria-label="Open delete confirmation modal"
// onKeyDown={handleKeyDown}
```

# Output Example
- Code should contain hardcoded text in English (no placeholders)
- Include type definitions for props, state, and handlers
- All handlers must be named (e.g., handleClickConfirm)

# Do Not
- Do not leave TODOs or placeholders
- Do not use non-English text in comments or code
- Do not use inline styles or custom CSS files
- Do not skip accessibility
- Do not write everything in a single file

# Examples
- "Click the button" instead of "Butona tıkla"
- "Submit the form" instead of "Formu gönder"
====
